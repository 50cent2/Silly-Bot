
use std::{fs, thread, time::Duration};

fn main() {
    dotenv::dotenv().ok();
    println!("Rust bot started. Watching for shared messages...");

    loop {
        let content = fs::read_to_string("../shared.txt").unwrap_or_default();
        if !content.is_empty() {
            println!("Rust bot read message: {}", content);
            fs::write("../shared.txt", "").unwrap(); // clear it
        }
        thread::sleep(Duration::from_secs(1));
    }
}



[package]
name = "rust_bot"
version = "0.1.0"
edition = "2021"

[dependencies]
dotenv = "0.15"
# bot.py
import discord
from discord.ext import commands

intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)
// main.rs
use teloxide::prelude::*;

#[tokio::main]
async fn main() {
    let bot = Bot::from_env();

    teloxide::repl(bot, |message| async move {
        message.answer("Hello from Rust!").send().await?;
        Ok(())
    })
    .await;
}